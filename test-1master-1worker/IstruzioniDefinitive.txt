Lista istruzioni per creazione cluster k8s con CI/CD

1.  Setting macchine virtuali
    Repo in gioco: 
	    https://github.com/matteocucchi/Manual-LAB.git \test-1master-1worker
	    https://github.com/matteocucchi/config-files.git

            1)  vagrant up                                                                                                                          --> crea macchine virtuali e le configura
            
            2)  vagrant ssh kmaster                                                                                                                 --> mi connetto alla vm
                2.1)  vagrant@kmaster$ sudo yum install wget -y                                                                                     --> installo wget
                2.2)  vagrant@kmaster$ wget https://raw.githubusercontent.com/matteocucchi/config-files/main/master.sh                              --> recupero master.sh
                2.3)  vagrant@kmaster$ chmod +x master.sh                                                                                           --> permessi esecuzione master.sh
                2.4)  vagrant@kmaster$ ./master.sh | grep task                                                                                      --> eseguo script (grep per stampa ordinata delle varie fasi)
            
            3) vagrant ssh kworker1                                                                                                                 --> mi connetto alla vm
                3.1)  vagrant@kworker1$ sudo yum install wget -y                                                                                    --> installo wget
                3.2)  vagrant@kworker1$ wget https://raw.githubusercontent.com/matteocucchi/config-files/main/worker.sh                             --> recupero worker.sh
                3.3)  vagrant@kworker1$ chmod +x worker.sh                                                                                          --> permessi esecuzione worker.sh
                3.4)  vagrant@kworker1$ ./worker.sh | grep task                                                                                     --> eseguo script (grep per stampa ordinata delle varie fasi)
            
            4) vagrant ssh kworker2                                                                                                                 --> mi connetto alla vm
                4.1)  vagrant@kworker2$ sudo yum install wget -y                                                                                    --> installo wget
                4.2)  vagrant@kworker2$ wget https://raw.githubusercontent.com/matteocucchi/config-files/main/worker.sh                             --> recupero worker.sh
                4.3)  vagrant@kworker2$ chmod +x worker.sh                                                                                          --> permessi esecuzione worker.sh
                4.4)  vagrant@kworker2$ ./worker.sh | grep task                                                                                     --> eseguo script (grep per stampa ordinata delle varie fasi)
            
            5) << sotto nodo master >>
                2.5) vagrant@kmaster$ kubeadm token create --print-join-command                                                                     --> stampa comando di join

            6) << sotto nodo worker1 >>
                3.5) vagrant@kworker1$ kubeadm join <INDIRIZZO_MASTER> --token <TOKEN> --discovery-token-ca-cert-hash sha256:<HEX_CODE>             --> comando che aggiunge il nodo alla rete
            
            7) << sotto nodo worker2 >>
                4.5) vagrant@kworker1$ kubeadm join <INDIRIZZO_MASTER> --token <TOKEN> --discovery-token-ca-cert-hash sha256:<HEX_CODE>             --> comando che aggiunge il nodo alla rete

            8) << sotto nodo master >>
                2.6) vagrant@master$ kubectl apply -f https://raw.githubusercontent.com/matteocucchi/config-files/main/kube-flannel.yml             --> installa flannel (necessario per networking)

2) Installazione ArgoCD
    Repo in gioco:
        https://github.com/matteocucchi/test-application.git
            1) << sotto nodo master >>
                1.1) vagrant@kmaster$ kubectl create namespace argocd                                                                                       --> crea namespace ArgoCD
                1.2) vagrant@kmaster$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml           --> installa componenti ArgoCD
                1.3) vagrant@kmaster$ kubectl apply -n argocd -f https://raw.githubusercontent.com/matteocucchi/test-application/main/application.yaml      --> installa application ArgoCD

3) Installazione Jenkins
    Repo in gioco:
        https://github.com/matteocucchi/test-application-code.git
        https://github.com/matteocucchi/jenkins-on-kube.git
            1) << sotto nodo master >>
                1.1) vagrant@kmaster$ sudo yum install -y git                                                                                               --> installo git
                1.2) vagrant@kmaster$ git clone https://github.com/matteocucchi/jenkins-on-kube.git                                                         --> clono repo
                1.3) vagrant@kmaster$ cd jenkins-on-kube                                                                                                    --> entro nella cartella
                1.4) vagrant@kmaster$ chmod +x exec.sh                                                                                                      --> permessi esecuzione a file
                1.5) vagrant@kmaster$ ./exec.sh                                                                                                             --> crea componenti per jenkins
                1.6) vagrant@kmaster$ kubectl get pod <JENKINS_POD_NAME> -n <JENKINS_NAMESPACE> -o jsonpath="{.status.containerStatuses[].containerID}" | sed 's/.*\/\///'

            2) << sotto il nodo in cui la pod di jenkins viene eseguita >>
                2.1) vagrant@kworker1$ sudo runc --root /run/containerd/runc/k8s.io/ exec -t -u 0 <CONTAINER_ID> sh                                                             --> accedo come root alla linea di comando del container in cui jenkins è installato
                    2.1.1) curl https://get.docker.com/ > dockerinstall && chmod 777 dockerinstall && ./dockerinstall                                                           --> installo docker
                    2.1.2) apt-get install bc -y                                                                                                                                --> installo bc (modulo per operazioni con float)
                    2.1.3) chmod 666 /var/run/docker.sock                                                                                                                       --> permessi docker.sock (anche account jenkins può eseguirlo)




